pipeline {
    agent any

    environment {
        PIP = "pip3" // pip3 install
        PROJECT_DIR = "messaging_app/messaging_app"
        VENV_DIR = "venv"
        REPORTS_DIR = "reports"
        TESTS_DIR = "tests"
        DOCKER_HUB_CREDENTIALS = 'dockerhub-creds' // Jenkins credentials ID
        IMAGE_NAME = 'your-dockerhub-username/messaging-app'
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Y-A-Dawit/alx-backend-python.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Prepare Project Structure') {
            steps {
                sh "mkdir -p messaging_app/messaging_app/reports messaging_app/messaging_app/tests"
            }
        }

        stage('Set Up Python Environment and Run Tests') {
            steps {
                python('Python3') {
                    sh 'pip install --upgrade pip'
                    sh 'pip install -r messaging_app/requirements.txt'
                    sh '''
                        pytest messaging_app \
                        --maxfail=1 --disable-warnings -q \
                        --junitxml=messaging_app/reports/pytest-report.xml \
                        --html=messaging_app/reports/report.html --self-contained-html
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:${IMAGE_TAG}", 'messaging_app')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'DOCKER_HUB_CREDENTIALS') {
                        docker.image("${IMAGE_NAME}:${IMAGE_TAG}").push()
                    }
                }
            }
        }

    }

    post {
        always {
            publishHTML([
                reportDir: 'messaging_app/reports',
                reportFiles: 'report.html',
                reportName: 'Pytest Report'
            ])
        }
        failure {
            echo "Pipeline failed ❌ — check the Pytest Report and build logs"
        }
    }
}
