pipeline {
    agent any

    tools {
        python 'Python3.11'  // the name you configured in Global Tool Config
    }

    environment {
        PYTHON = "python3.11"
        PIP = "pip3" // pip3 install
        VEN_DIR = "venv"
        PROJECT_DIR = "messaging_app/messaging_app"
        REPORTS_DIR = "reports"
        TESTS_DIR = "tests"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Y-A-Dawit/alx-backend-python.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Prepare Project Structure') {
            steps {
                sh """
                    mkdir -p ${PROJECT_DIR}/${REPORTS_DIR} ${PROJECT_DIR}/${TESTS_DIR}
                """
            }
        }

        stage('Set Up Python Environment') {
            steps {
                sh """
                    python3 -m venv ${PROJECT_DIR}/${VENV_DIR}
                    ${PROJECT_DIR}/${VENV_DIR}/bin/pip install --upgrade pip
                    ${PROJECT_DIR}/${VENV_DIR}/bin/pip install -r ${PROJECT_DIR}/requirements.txt
                """
            }
        }

        stage('Run Tests') {
            steps {
                sh """
                    ${PROJECT_DIR}/${VENV_DIR}/bin/python -m pytest \
                        ${PROJECT_DIR} \
                        --maxfail=1 --disable-warnings -q \
                        --junitxml=${PROJECT_DIR}/${REPORTS_DIR}/pytest-report.xml \
                        --html=${PROJECT_DIR}/${REPORTS_DIR}/report.html --self-contained-html
                """
            }
            post {
                always {
                    publishHTML([ 
                        reportDir: "messaging_app/reports",
                        reportFiles: "report.html",
                        reportName: "Pytest Report",
                        keepAll: true,
                        alwaysLinkToLastBuild: true,
                        allowMissing: true
                    ])
                }
            }
        }
    }

    post {
        success { echo 'Pipeline completed successfully ✅' }
        failure { echo 'Pipeline failed ❌ — check the Pytest Report' }
    }
}
